var Button = function(config) //button contructor
{
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 50;
    this.height = config.height || 50;
    this.butText = config.butText;
    this.color = config.color || color(255, 255, 255);
    this.onClick = config.onClick || function() {};
};
Button.prototype.draw = function() //button draw function
{
    rectMode(LEFT);
    fill(this.color);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(20);
    textAlign(CENTER, TOP);
    text(this.butText, this.x+36, this.y+(this.height/2)-10);
};
Button.prototype.isMouseInside = function() //determines if the mouse is over a button
{
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};
Button.prototype.handleMouseClick = function() 
/* checks isMouseInside if yes, runs the onClick function */
{
    if (this.isMouseInside()) 
    {
        this.onClick();
    }
};

var a = 0;// numbers shown on the screen
var b = 0;// num 2 in calculation
var z = 0; // defines what happens to the num (+,-,/,*) 'OPERATION'
/*
0=nothing, 1 = add, 2 = subtract, 3 = times, 4 = divide, 5 = equal, 6 = clear
*/
var butSymbols = ["1","2","3","+","4","5","6","-","7","8","9","ร","Clear", "0" ,"=","รท" ];
var butValues = [1,2,3,"+",4,5,6,"-", 7,8,9,"*","Clear", 0 ,"=","รท" ];/*keep symbols so it lines up with the other array*/
var calcButtons = [];//where the buttons are stored and called from
var pastAnswer = 0;//allows memory of the previous answer
var defOpColors = {r:129,g:206, b:227}; //default op colors
var wasOpPressed = false;//if true, triggers change in color of op

// tells if a operator was just pressed, triggers function to darken the color of the tile temporarily

for (var i = 0; i <= 3; i++) //creates buttons
{
    for (var j = 0; j <= 3; j++)
    {
        var calculatorButtons = new Button
        ({
            x: 56 + 109 * i,
            y: 108 + 109 * j,
            width: 105,
            height: 105,
            butText: butSymbols[i+j*4],
            color:color(defOpColors.r,defOpColors.g,defOpColors.b),
        });
        calcButtons.push(new Button(calculatorButtons));
    }
}
for (var i = 0; i <= 10; i++)//turns number buttons a color, clear button seperate
{ 
    if (i !== 3)
    {
        calcButtons[i].color = color(145, 136, 140);
    }
    else
    {
        calcButtons[i].color = color(79, 219, 28);
    }
}
var arrayAdd = function(a)//will be used to add up chosen numbers, as the symbols arent numbers techniqually terrible spelling there whatever 
{
    var sumOfInputs = 0;
    for (var i = 0; i < a.length; i++)
    {
        sumOfInputs = sumOfInputs + a[i];
    }
    return sumOfInputs;
};
var arraySub = function(a) //subtraction function
{
    var difOfInputs = 0;
    for (var i = 0; i < a.length; i++)
    {
        if (i === 0)
        {
            difOfInputs = a[i]-difOfInputs;
        }
        else
        {
            difOfInputs = difOfInputs-a[i];
        }
    }
    return difOfInputs;
};
var arrayMult = function(a)//multiply function
{
    var product = 0;
    for (var i = 0; i < a.length; i++)
    {
        if (i === 0)
        {
            product = a[i];
        }
        else 
        {
            product = product *= a[i];
        }
    }
    return product;
};
var arrayDiv = function(a)
{
    var quotient = 0;
    for (var i = 0; i < a.length; i++)
    {
        if (i === 0)
        {
            quotient = a[i];
        }
        else 
        {
            quotient = quotient /= a[i];
        }
    }
    return quotient;
};
var arrayCombineIntoNum = function(a)//each button pushs individual digits into array. they are the put into 1 number using this function EX: [4,5,3,5] --> 4,535
{
    var finalNum = 0;
    var tens = 10;
    for (var i = a.length-1; i >= 0; i--)//starts at the end of array given
    {
        if (i === a.length-1)// if its the last num in the array, it gets the ones place
        {
            finalNum = a[i];
        }
        else 
        /*the digits before the last one are multiplied by ten, or a squared 10 to be put
        into the coorisponding numbers place, as our numbers are a base of ten */
        {
            finalNum = finalNum + a[i]*tens;
            tens *= 10;
        }
    }
    return finalNum;
};
mouseClicked = function()//mouseclicked function
{
    for (var i = 0; i < calcButtons.length; i++)
    {
        calcButtons[i].handleMouseClick();
    }
};
var numInput = [];//individual digits pushed by clicking numbers
var valuesOfInput = [];//the full numbers which will be used in equation
var answer = null;
var keepAShown = false;
var keepPastAnswerShown = false;

var numButFunction = function(bIndex,bValue)
{
    wasOpPressed = false;
    keepAShown = false;
    keepPastAnswerShown = false;
    if (z === 0 && pastAnswer !== 0)
    {
        pastAnswer = 0;
    }
    answer = null;
    if (z === 0 && pastAnswer === 0) // if a operator has not been pressed
    {
        if (a === 0)
        {
            a = calcButtons[bIndex].butText;
            numInput.push(bValue);
        } 
        else if (a !== 0)
        {
            a = a + calcButtons[bIndex].butText;
            numInput.push(bValue);
        }
    }
    else if (z === 0 && pastAnswer !== 0)
    {
        a = pastAnswer;
        if (b === 0)
        {
            b = calcButtons[bIndex].butText;
            numInput.push(bValue);
        } 
        else if (b !== 0)
        {
            b = b + calcButtons[bIndex].butText;
            numInput.push(bValue);
        }
    }
    else if (z > 0)
    {
        if (b === 0)
        {
            b = calcButtons[bIndex].butText;
            numInput.push(bValue);
        } 
        else if (b !== 0)
        {
            b = b + calcButtons[bIndex].butText;
            numInput.push(bValue);
        }
    }
};
calcButtons[0].onClick = function() // "1" button
{
    numButFunction(0,1);
};
calcButtons[1].onClick = function() // "4" button
{
    numButFunction(1,4);
};
calcButtons[2].onClick = function() // "7" button
{
    numButFunction(2,7);
};
calcButtons[3].onClick = function() // "Clear" button
{
    //add more later
    numInput = [];
    valuesOfInput = [];
    pastAnswer = 0;
    answer = null;
    a = 0;
    b = 0;
    z = 0;
    keepPastAnswerShown = false;
    keepAShown = false;
    wasOpPressed = false;
};
calcButtons[4].onClick = function() // "2" button
{
    numButFunction(4,2);
};
calcButtons[5].onClick = function() // "5" button
{
    numButFunction(5,5);
};
calcButtons[6].onClick = function() // "8" button
{
    numButFunction(6,8);
};
calcButtons[7].onClick = function() // "0" button
{
    numButFunction(7,0);
};
calcButtons[8].onClick = function() // "3" button
{
    numButFunction(8,3);
};
calcButtons[9].onClick = function() // "6" button
{
    numButFunction(9,6);
};
calcButtons[10].onClick = function() // "9" button
{
    numButFunction(10,9);
};
calcButtons[11].onClick = function() // "=" button
{
    var runOp = function(opFunction)
    {
        valuesOfInput.push(arrayCombineIntoNum(numInput));
        a = 0;
        b = 0;
        z = 0;
        numInput = [];
        answer = opFunction(valuesOfInput);
        pastAnswer = answer;
        valuesOfInput = [];
    };
    /* this function resets a,b,z, numInput[], valuesOfInput[],sets answer pastanswer, and also calls the correct op to use with the numbers*/
    wasOpPressed = true;
    if (z === 0)
    {
    }
    else if (z === 1)
    {
        runOp(arrayAdd);
    }
    else if (z === 2)
    {
        runOp(arraySub);
    }
    else if (z === 3)
    {
        runOp(arrayMult);
    }
    else if (z === 4)
    {
        runOp(arrayDiv);
    }
};
calcButtons[12].onClick = function() // "+" button
{
    //come back to this later
    //put all input numbers into one number
    wasOpPressed = true;
    if (z === 0 && pastAnswer !== 0)
    {
        valuesOfInput.push(pastAnswer);
        numInput = [];
        a = 0;
        z = 1;
        answer = null;
        keepPastAnswerShown = true;
    }
    else if (z === 0)
    {
        valuesOfInput.push(arrayCombineIntoNum(numInput));
        numInput = [];
        a = 0;
        z = 1;
        answer = null;
        keepAShown = true;
    }
    else if (z === 1)
    {
        valuesOfInput.push(arrayCombineIntoNum(numInput));
        numInput = [];
        b = 0;
        a = 0;
        answer = null;
    }
};
calcButtons[13].onClick = function() // "-" button
{
    //if equals was pressed, then a operator is pressed, it uses the past answer
    wasOpPressed = true;
    if (z === 0 && pastAnswer !== 0) // 
    {
        valuesOfInput.push(pastAnswer);
        numInput = [];
        a = 0;
        z = 2;
        answer = null;
        keepPastAnswerShown = true;
    }
    else if (z === 0)
    {
        valuesOfInput.push(arrayCombineIntoNum(numInput));
        numInput = [];
        a = 0;
        z = 2;
        answer = null;
        keepAShown = true;
    }
    else if (z === 2)
    {
        valuesOfInput.push(arrayCombineIntoNum(numInput));
        numInput = [];
        b = 0;
        a = 0;
        answer = null;
    }
};
calcButtons[14].onClick = function() // "X" button
{
    wasOpPressed = true;
    if (z === 0 && pastAnswer !== 0)
    {
        valuesOfInput.push(pastAnswer);
        numInput = [];
        a = 0;
        z = 3;
        answer = null;
        keepPastAnswerShown = true;
    }
    else if (z === 0)
    {
        valuesOfInput.push(arrayCombineIntoNum(numInput));
        //println(valuesOfInput[0]);
        numInput = [];
        a = 0;
        z = 3;
        answer = null;
        keepAShown = true;
    }
    else if (z === 3)
    {
        valuesOfInput.push(arrayCombineIntoNum(numInput));
        numInput = [];
        b = 0;
        a = 0;
        answer = null;
    }
};
calcButtons[15].onClick = function() // "Divide" button
{
    wasOpPressed = true;
    if (z === 0 && pastAnswer !== 0)
    {
        valuesOfInput.push(pastAnswer);
        numInput = [];
        a = 0;
        z = 4;
        answer = null;
        keepPastAnswerShown = true;
    }
    else if (z === 0)
    {
        valuesOfInput.push(arrayCombineIntoNum(numInput));
        //println(valuesOfInput[0]);
        numInput = [];
        a = 0;
        z = 4;
        answer = null;
        keepAShown = true;
    }
    else if (z === 4)
    {
        valuesOfInput.push(arrayCombineIntoNum(numInput));
        numInput = [];
        b = 0;
        a = 0;
        answer = null;
    }
};
var calcNumDisplay = function(x,y)
{
    var displayWhat;
    if (answer !== null)
    {
        displayWhat = answer;
    }
    if ( a !== 0 )
    {
        displayWhat = a;
    }
    else if (b !== 0)
    {
        displayWhat = b;
    }
    
    if (keepAShown === true)
    {
        text(valuesOfInput, x , y);
    }
    else if (keepPastAnswerShown === true)//turned on from = button
    {
        text(pastAnswer, x , y);
    }
    else
    {
        text(displayWhat, x , y);
    }
    
};

var changeOpColor = function ()//changes the color of the op buttons so user can remeber which they chose
{
    var whichOpPressed = function(index)
    {
        calcButtons[index].color = color(defOpColors.r-50,defOpColors.g-50,defOpColors.b-50);
            calcButtons[11].color = color(defOpColors.r, defOpColors.g, defOpColors.b);//makes sure "=" goes back to normal
    };//lowers colors,resets "=" color
    if (wasOpPressed === true)
    {
        if (z === 0)// "=" pressed
        {
            calcButtons[11].color = color(defOpColors.r-50,defOpColors.g-50,defOpColors.b-50);
        }
        else if (z === 1)
        {
            whichOpPressed(12);
        }
        else if (z === 2)
        {
            whichOpPressed(13);
        }
        else if (z === 3)
        {
            whichOpPressed(14);
        }
        else if (z === 4)
        {
            whichOpPressed(15);
        }
    }
    else //changes it back 
    {
        for (var i = 11; i <= 15; i++)
        {
            calcButtons[i].color = color(defOpColors.r, defOpColors.g, defOpColors.b);
        }
    }
};
draw = function() 
{
    for (var i = 0; i < calcButtons.length; i++)
    {
        calcButtons[i].draw();
    }
    fill(161, 155, 155);
    rect(60,10,420,76);
    textSize(20);
    fill(255, 255, 255);
    textAlign(RIGHT,CENTER);
    calcNumDisplay(470,47);
    changeOpColor();
};
